
package services;

import java.util.List;
import javax.jws.Oneway;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.3.3
 * Generated source version: 2.2
 * 
 */
@WebService(name = "StudentWebService", targetNamespace = "http://services/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface StudentWebService {


    /**
     * 
     * @param stu
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "updateStudent", targetNamespace = "http://services/", className = "services.UpdateStudent")
    @Action(input = "http://services/StudentWebService/updateStudent")
    public void updateStudent(
        @WebParam(name = "stu", targetNamespace = "")
        Student stu);

    /**
     * 
     * @param id
     * @return
     *     returns services.Student
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findStudentByID", targetNamespace = "http://services/", className = "services.FindStudentByID")
    @ResponseWrapper(localName = "findStudentByIDResponse", targetNamespace = "http://services/", className = "services.FindStudentByIDResponse")
    @Action(input = "http://services/StudentWebService/findStudentByIDRequest", output = "http://services/StudentWebService/findStudentByIDResponse")
    public Student findStudentByID(
        @WebParam(name = "id", targetNamespace = "")
        int id);

    /**
     * 
     * @param stu
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "removeStudent", targetNamespace = "http://services/", className = "services.RemoveStudent")
    @Action(input = "http://services/StudentWebService/removeStudent")
    public void removeStudent(
        @WebParam(name = "stu", targetNamespace = "")
        Student stu);

    /**
     * 
     * @param stu
     */
    @WebMethod(operationName = "InsertStudent")
    @RequestWrapper(localName = "InsertStudent", targetNamespace = "http://services/", className = "services.InsertStudent")
    @ResponseWrapper(localName = "InsertStudentResponse", targetNamespace = "http://services/", className = "services.InsertStudentResponse")
    @Action(input = "http://services/StudentWebService/InsertStudentRequest", output = "http://services/StudentWebService/InsertStudentResponse")
    public void insertStudent(
        @WebParam(name = "stu", targetNamespace = "")
        Student stu);

    /**
     * 
     * @param name
     * @return
     *     returns java.util.List&lt;services.Student&gt;
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findStudentByName", targetNamespace = "http://services/", className = "services.FindStudentByName")
    @ResponseWrapper(localName = "findStudentByNameResponse", targetNamespace = "http://services/", className = "services.FindStudentByNameResponse")
    @Action(input = "http://services/StudentWebService/findStudentByNameRequest", output = "http://services/StudentWebService/findStudentByNameResponse")
    public List<Student> findStudentByName(
        @WebParam(name = "name", targetNamespace = "")
        String name);

}
